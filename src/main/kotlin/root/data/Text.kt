package root.data

import kotlinx.serialization.*

@Serializable
data class Text(
    @SerialName("msg-add-admin") val msgAddAdmin: String,
    @SerialName("msg-add-group") val msgAddGroup: String,
    @SerialName("msg-no-admin") val msgNoAdmin: String,
    @SerialName("msg-no-campaign") val msgNoCampaign: String,
    @SerialName("send-to-every-user") val sendToEveryUser: String,
    @SerialName("send-to-every-group") val sendToEveryGroup: String,
    @SerialName("msg-send-to-every-user") val msgSendToEveryUser: String,
    @SerialName("msg-send-to-every-group") val msgSendToEveryGroup: String,
    @SerialName("msg-not-admin") val msgNotAdmin: String,
    @SerialName("main-menu") val mainMenu: String,
    @SerialName("add-admin") val addAdmin: String,
    @SerialName("add-group") val addGroup: String,
    @SerialName("add-admin-to-campaign") val addAdminToCampaign: String,
    @SerialName("msg-admin-to-campaign") val msgAdminToCampaign: String,
    @SerialName("err-admin-to-campaign") val errAdminToCampaign: String,
    @SerialName("add-group-to-campaign") val addGroupToCampaign: String,
    @SerialName("err-group-to-campaign") val errGroupToCampaign: String,
    @SerialName("msg-group-to-campaign") val msgGroupToCampaign: String,
    @SerialName("create-campaign") val createCampaign: String,
    @SerialName("err-create-campaign") val errCreateCampaign: String,
    @SerialName("msg-create-campaign") val msgCreateCampaign: String,
    @SerialName("remove-campaign") val removeCampaign: String,
    @SerialName("err-remove-campaign") val errRemoveCampaign: String,
    @SerialName("msg-remove-campaign") val msgRemoveCampaign: String,
    @SerialName("time-out-task") val timeOutTask: String,
    @SerialName("show-tasks-list") val showTasksList: String,
    @SerialName("task-not-found") val taskNotFound: String,
    @SerialName("invite-text") val inviteText: String,
    @SerialName("user-main-menu") val userMainMenu: String,
    @SerialName("join-to-campaign") val joinToCampaign: String,
    @SerialName("show-user-campaigns") val showUserCampaigns: String,
    @SerialName("user-available-campaigns") val userAvailableCampaigns: String,
    @SerialName("msg-user-available-campaigns-not-found") val msgUserAvailableCampaignsNotFound: String,
    @SerialName("err-clb-user-added-to-campaign") val errClbUserAddedToCampaign: String,
    @SerialName("clb-user-added-to-campaign") val clbUserAddedToCampaign: String,
    @SerialName("err-user-added-to-campaign") val errUserAddedToCampaign: String,
    @SerialName("user-added-to-campaign") val userAddedToCampaign: String,
    @SerialName("remove-admin-from-campaign") val removeAdminFromCampaign: String,
    @SerialName("msg-remove-admin-from-campaign") val msgRemoveAdminFromCampaign: String,
    @SerialName("err-remove-admin-from-campaign") val errRemoveAdminFromCampaign: String,
    @SerialName("remove-group-from-campaign") val removeGroupFromCampaign: String,
    @SerialName("msg-remove-group-from-campaign") val msgRemoveGroupFromCampaign: String,
    @SerialName("err-remove-group-from-campaign") val errRemoveGroupFromCampaign: String,
    @SerialName("suc-create-campaign") val sucCreateCampaign: String,
    @SerialName("suc-admin-to-campaign") val sucAdminToCampaign: String,
    @SerialName("suc-group-to-campaign") val sucGroupToCampaign: String,
    @SerialName("suc-remove-campaign") val sucRemoveCampaign: String,
    @SerialName("suc-remove-admin-from-campaign") val sucRemoveAdminFromCampaign: String,
    @SerialName("suc-remove-group-from-campaign") val sucRemoveGroupFromCampaign: String,
    @SerialName("suc-msg-to-users") val sucMsgToUsers: String,
    @SerialName("err-msg-to-users-not-found") val errMsgToUsersNotFound: String,
    @SerialName("err-msg-to-users") val errMsgToUsers: String,
    @SerialName("suc-msg-to-campaign") val sucMsgToCampaign: String,
    @SerialName("err-msg-to-campaign-not-found") val errMsgToCampaignNotFound: String,
    @SerialName("err-msg-to-campaign") val errMsgToCampaign: String,
    @SerialName("admin-available-campaigns") val adminAvailableCampaigns: String,
    @SerialName("err-clb-send-message-to-every-group") val errClbSendMessageToEveryGroup: String,
    @SerialName("err-send-message-to-every-group") val errSendMessageToEveryGroup: String,
    @SerialName("clb-send-message-to-every-group") val clbSendMessageToEveryGroup: String,
    @SerialName("suc-send-message-to-every-group") val sucSendMessageToEveryGroup: String,
    @SerialName("clb-send-message-to-every-users") val clbSendMessageToEveryUsers: String,
    @SerialName("suc-send-message-to-every-users") val sucSendMessageToEveryUsers: String,
    @SerialName("err-clb-send-message-to-every-users") val errClbSendMessageToEveryUsers: String,
    @SerialName("err-common") val errCommon: String,
    @SerialName("add-super-admin") val addSuperAdmin: String,
    @SerialName("msg-add-super-admin") val msgAddSuperAdmin: String,
    @SerialName("suc-add-super-admin") val sucAddSuperAdmin: String,
    @SerialName("err-campaign-not-found") val errCampaignNotFound: String,
    @SerialName("err-add-super-admin") val errAddSuperAdmin: String,
    @SerialName("remove-super-admin") val removeSuperAdmin: String,
    @SerialName("suc-remove-super-admin") val sucRemoveSuperAdmin: String,
    @SerialName("err-remove-super-admin") val errRemoveSuperAdmin: String,
    @SerialName("err-add-super-admin-already-exist") val errAddSuperAdminAlreadyExist: String,
    @SerialName("err-clb-common") val errClbCommon: String,
    @SerialName("survey-options") val surveyOptions: String,
    @SerialName("survey-option-create") val surveyOptionCreate: String,
    @SerialName("survey-delete") val surveyDelete: String,
    @SerialName("survey-deleted") val surveyDeleted: String,
    @SerialName("msg-survey-actions-name") val msgSurveyActionsName: String,
    @SerialName("edit-questions") val editQuestions: String,
    @SerialName("survey-option-back") val surveyOptionBack: String,
    @SerialName("survey-option-select-back") val surveyOptionSelectBack: String,
    @SerialName("survey-question-back") val surveyQuestionBack: String,
    @SerialName("survey-question-select-back") val surveyQuestionSelectBack: String,
    @SerialName("edit-survey-name") val editSurveyName: String,
    @SerialName("edit-survey-description") val editSurveyDescription: String,
    @SerialName("err-callback") val errCallback: String,
    @SerialName("clb-survey-options") val clbSurveyOptions: String,
    @SerialName("clb-survey-questions") val clbSurveyQuestions: String,
    @SerialName("clb-survey") val clbSurvey: String,
    @SerialName("clb-edit-survey") val clbEditSurvey: String,
    @SerialName("edit-survey") val editSurvey: String,
    @SerialName("clb-survey-question-edit") val clbSurveyQuestionEdit: String,
    @SerialName("err-not-found-survey") val errNotFoundSurvey: String,
    @SerialName("err-survey-delete") val errSurveyDelete: String,
    @SerialName("admin-available-campaigns-surveys") val adminAvailableCampaignsSurveys: String,
    @SerialName("survey-question-delete") val surveyQuestionDelete: String,
    @SerialName("survey-question-edit-options") val surveyQuestionEditOptions: String,
    @SerialName("survey-question-edit-sort") val surveyQuestionEditSort: String,
    @SerialName("survey-question-edit-text") val surveyQuestionEditText: String,
    @SerialName("survey-option-delete") val surveyOptionDelete: String,
    @SerialName("survey-option-edit-value") val surveyOptionEditValue: String,
    @SerialName("survey-option-edit-sort") val surveyOptionEditSort: String,
    @SerialName("survey-option-edit-text") val surveyOptionEditText: String,
    @SerialName("msg-survey") val msgSurvey: String,
    @SerialName("save-survey") val saveSurvey: String,
    @SerialName("back-survey") val backSurvey: String,
    @SerialName("enter-text-back") val enterTextBack: String,
    @SerialName("back-to-survey-crud-menu") val backToSurveyCRUDMenu: String,
    @SerialName("back-to-survey-menu") val backToSurveyMenu: String,
    @SerialName("msg-survey-actions-desc") val msgSurveyActionsDesc: String,
    @SerialName("survey") val survey: String,
    @SerialName("reset") val reset: String
)